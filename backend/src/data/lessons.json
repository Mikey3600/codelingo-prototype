[
  {
    "id": "python-basics-1",
    "title": "Python Basics: Variables and Data Types",
    "description": "Learn the fundamentals of Python programming including variables, data types, and basic operations.",
    "language": "python",
    "level": "beginner",
    "duration": 20,
    "prerequisites": [],
    "order": 1,
    "totalXp": 50,
    "challenges": [
      {
        "id": "py-basics-1-1",
        "type": "multiple_choice",
        "instruction": "Which of the following is a valid variable name in Python?",
        "options": ["1variable", "_variable", "variable-name", "class"],
        "correctAnswer": "_variable",
        "hints": ["Variable names cannot start with a number", "Variable names cannot contain special characters like '-'"],
        "xpReward": 10
      },
      {
        "id": "py-basics-1-2",
        "type": "fill_in_blank",
        "instruction": "Complete the code to assign the value 42 to a variable named 'answer'.",
        "codeTemplate": "_____ = 42",
        "correctAnswer": "answer",
        "hints": ["Variable names should be descriptive", "Use lowercase for variable names"],
        "xpReward": 10
      },
      {
        "id": "py-basics-1-3",
        "type": "code_completion",
        "instruction": "Complete the code to print the type of the variable 'name'.",
        "codeTemplate": "name = \"John\"\nprint(_____(name))",
        "correctAnswer": "type",
        "hints": ["There's a built-in function to check the type of a variable", "The function name is the same as what you're trying to find"],
        "xpReward": 15
      },
      {
        "id": "py-basics-1-4",
        "type": "code_completion",
        "instruction": "Complete the code to convert the string '123' to an integer.",
        "codeTemplate": "num_str = \"123\"\nnum_int = _____(num_str)",
        "correctAnswer": "int",
        "hints": ["Use a built-in function to convert between types", "The function name is the same as the type you want to convert to"],
        "xpReward": 15
      }
    ]
  },
  {
    "id": "python-basics-2",
    "title": "Python Basics: Control Flow",
    "description": "Learn about conditional statements and loops in Python to control the flow of your programs.",
    "language": "python",
    "level": "beginner",
    "duration": 25,
    "prerequisites": ["python-basics-1"],
    "order": 2,
    "totalXp": 60,
    "challenges": [
      {
        "id": "py-basics-2-1",
        "type": "multiple_choice",
        "instruction": "Which keyword is used to define a conditional block in Python?",
        "options": ["when", "if", "check", "condition"],
        "correctAnswer": "if",
        "hints": ["It's a two-letter keyword", "It's the same in many programming languages"],
        "xpReward": 10
      },
      {
        "id": "py-basics-2-2",
        "type": "code_completion",
        "instruction": "Complete the code to create a for loop that iterates over a list of numbers.",
        "codeTemplate": "numbers = [1, 2, 3, 4, 5]\n_____ num in numbers:\n    print(num)",
        "correctAnswer": "for",
        "hints": ["This keyword is used to start a loop", "It's followed by a variable name and the 'in' keyword"],
        "xpReward": 15
      },
      {
        "id": "py-basics-2-3",
        "type": "code_completion",
        "instruction": "Complete the code to check if the variable 'age' is greater than or equal to 18.",
        "codeTemplate": "age = 20\nif age _____ 18:\n    print(\"Adult\")\nelse:\n    print(\"Minor\")",
        "correctAnswer": ">=",
        "hints": ["Use a comparison operator", "You need to check if age is greater than or equal to 18"],
        "xpReward": 15
      },
      {
        "id": "py-basics-2-4",
        "type": "code_correction",
        "instruction": "Fix the code to correctly implement a while loop that counts from 1 to 5.",
        "codeTemplate": "count = 1\nwhile count < 5:\n    print(count)\n    count + 1",
        "correctAnswer": "count = 1\nwhile count <= 5:\n    print(count)\n    count += 1",
        "hints": ["The loop condition should include 5", "You need to increment the counter properly"],
        "xpReward": 20
      }
    ]
  },
  {
    "id": "js-basics-1",
    "title": "JavaScript Basics: Variables and Data Types",
    "description": "Learn the fundamentals of JavaScript including variables, data types, and basic operations.",
    "language": "javascript",
    "level": "beginner",
    "duration": 20,
    "prerequisites": [],
    "order": 1,
    "totalXp": 50,
    "challenges": [
      {
        "id": "js-basics-1-1",
        "type": "multiple_choice",
        "instruction": "Which keyword is NOT used to declare variables in modern JavaScript?",
        "options": ["var", "let", "const", "variable"],
        "correctAnswer": "variable",
        "hints": ["There are three keywords for variable declaration in JavaScript", "One of the options is not a valid JavaScript keyword"],
        "xpReward": 10
      },
      {
        "id": "js-basics-1-2",
        "type": "fill_in_blank",
        "instruction": "Complete the code to declare a constant variable named 'PI' with the value 3.14.",
        "codeTemplate": "_____ PI = 3.14;",
        "correctAnswer": "const",
        "hints": ["Use the keyword for variables that shouldn't change", "It's a four-letter keyword"],
        "xpReward": 10
      },
      {
        "id": "js-basics-1-3",
        "type": "code_completion",
        "instruction": "Complete the code to check the type of the variable 'name'.",
        "codeTemplate": "let name = \"John\";\nconsole.log(_____ name);",
        "correctAnswer": "typeof",
        "hints": ["There's an operator to check the type of a variable", "It's a keyword followed by the variable name"],
        "xpReward": 15
      },
      {
        "id": "js-basics-1-4",
        "type": "code_completion",
        "instruction": "Complete the code to convert the string '123' to a number.",
        "codeTemplate": "let numStr = \"123\";\nlet numInt = _____(numStr);",
        "correctAnswer": "Number",
        "hints": ["Use a built-in function to convert between types", "The function name starts with a capital letter"],
        "xpReward": 15
      }
    ]
  },
  {
    "id": "java-basics-1",
    "title": "Java Basics: Classes and Objects",
    "description": "Learn about object-oriented programming in Java with classes and objects.",
    "language": "java",
    "level": "intermediate",
    "duration": 30,
    "prerequisites": [],
    "order": 1,
    "totalXp": 70,
    "challenges": [
      {
        "id": "java-basics-1-1",
        "type": "multiple_choice",
        "instruction": "Which keyword is used to create an instance of a class in Java?",
        "options": ["create", "instance", "new", "object"],
        "correctAnswer": "new",
        "hints": ["It's a three-letter keyword", "It's followed by the constructor call"],
        "xpReward": 10
      },
      {
        "id": "java-basics-1-2",
        "type": "code_completion",
        "instruction": "Complete the code to define a class named 'Person'.",
        "codeTemplate": "public _____ Person {\n    private String name;\n    private int age;\n}",
        "correctAnswer": "class",
        "hints": ["This keyword is used to define a class", "It comes before the class name"],
        "xpReward": 15
      },
      {
        "id": "java-basics-1-3",
        "type": "code_completion",
        "instruction": "Complete the code to create a constructor for the Person class.",
        "codeTemplate": "public class Person {\n    private String name;\n    private int age;\n    \n    public _____(String name, int age) {\n        this.name = name;\n        this.age = age;\n    }\n}",
        "correctAnswer": "Person",
        "hints": ["The constructor has the same name as the class", "It doesn't have a return type"],
        "xpReward": 20
      },
      {
        "id": "java-basics-1-4",
        "type": "code_correction",
        "instruction": "Fix the code to correctly implement a getter method for the 'name' property.",
        "codeTemplate": "public class Person {\n    private String name;\n    \n    public name getName() {\n        return name;\n    }\n}",
        "correctAnswer": "public class Person {\n    private String name;\n    \n    public String getName() {\n        return name;\n    }\n}",
        "hints": ["The return type of the method should match the property type", "Getter methods start with 'get' followed by the property name"],
        "xpReward": 25
      }
    ]
  }
]